#! /usr/bin/env bash

DIR="${BASH_SOURCE%/*}"
if [[ ! -d "$DIR" ]]; then DIR="$PWD"; fi

source "$DIR/lib-path-manipulation"

if [ -z $BACA ]; then
    echo Must set BACA environment variable ...
    exit -1
fi

if [ -d $BACA/boilerplate ]; then
    boilerplate=$BACA/boilerplate
else
    # GitHub actions
    boilerplate=/tmp/baca/boilerplate
fi

make_layout_ly() {
    layout_py_path="$1"
    directory=$(dirname "$layout_py_path")
    stem=$(basename -- "$layout_py_path")
    stem="${stem%.*}"
    layout_ly_path="$directory"/"$stem".ly
    maker_name=__make_layout_ly__.py
    maker_source="$boilerplate"/"$maker_name"
    maker_target="$directory"/"$maker_name"
    if [ -f "$maker_target" ]; then
        echo Removing $(trim_score_path "$maker_target") ...
    fi
    echo Writing $(trim_score_path "$maker_target") ...
    cp "$maker_source" "$maker_target"
    "$DIR/boil" "$maker_target" layout_module_name "$stem"
    echo Interpreting $(trim_score_path "$maker_target") ...
    python "$maker_target" > /dev/null
    echo Removing $(trim_score_path "$maker_target") ...
    rm "$maker_target"
}


# TODO: optional code that can be used to make this script iterate segment directories
#paths=$(find . -name *layout.py | sort)
#for path in $paths; do
#    echo Interpreting $(realpath "$path") ...
#done
#path_count=$(echo $paths | wc -w | xargs)
#
#if [ 1 -lt $path_count ]; then
#    prompt="${path_count} files ok?> "
#    read -p "$prompt" confirm && [[ $confirm == y ]] || exit 1
#fi
#echo
#
#for path in $paths; do
#    layout_py_path=$(realpath $path)
#    directory=$(dirname "$layout_py_path")
#    filename=$(basename -- "$layout_py_path")
#    filename="${filename%.*}"
#    layout_ly_path="$directory"/"$filename".ly
#    SECONDS=0
#    make_layout_ly "$layout_py_path"
#    if [ -f "$layout_ly_path" ]; then
#        echo Found "$layout_ly_path" ...
#    else
#        echo Can not produce "$layout_ly_path" ...
#    fi
#    if [ "$SECONDS" -eq 1 ]; then
#        echo "Total time ${SECONDS} second ..."
#    else
#        echo "Total time ${SECONDS} seconds ..."
#    fi
#    echo
#done
