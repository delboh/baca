#! /usr/bin/env bash

source lib-path-manipulation

boilerplate=$BACA/boilerplate

make_segment_ly() {
    definition_py_path=$(realpath "$1")
    if [ ! -f "$definition_py_path" ]; then
        echo Can not find "$definition_py_path" ...
    fi
    segment_directory=$(dirname "$definition_py_path")
    segment_name=$(basename "$segment_directory")
    illustration_ly_path="$segment_directory/illustration.ly"
    if [ -f "$illustration_ly_path" ]; then
        echo Removing $(trim_score_path "$illustration_ly_path") ...
    fi
    maker_name=__make_segment_ly__.py
    maker_source="$boilerplate/$maker_name"
    maker_target="$segment_directory/$maker_name"
    if [ -f "$maker_target" ]; then
        rm "$maker_target"
    fi
    echo Writing $(trim_score_path "$maker_target") ...
    cp "$maker_source" "$maker_target"

    if [ "$segment_name" == "01" ]; then
        statement="previous_metadata = None"
        persist_statement="previous_persist = None"
    else
        previous_segment=$(get_previous_sibling_directory "$segment_directory")
        metadata="$previous_segment/__metadata__.py"
        statement="file = baca.Path('$metadata')"
        statement="$statement
        lines = file.read_text()"
        statement="$statement
        exec(lines)"
        statement="$statement
        previous_metadata = metadata"
        persist="$previous_segment/__persist__.py"
        persist_statement="file = baca.Path('$persist')"
        persist_statement="$persist_statement
        lines = file.read_text()"
        persist_statement="$persist_statement
        exec(lines)"
        persist_statement="$persist_statement
        previous_persist = persist"
    fi
    boil "$maker_target" previous_segment_metadata_import_statement "$statement" \
        previous_segment_persist_import_statement "$persist_statement"
    echo Interpreting $(trim_score_path "$maker_target") ...
    python "$maker_target"
    echo Removing $(trim_score_path "$maker_target") ...
    rm "$maker_target"
    if [ -f "$illustration_ly" ]; then
        echo Found $(trim_score_path "$illustration_ly") ...
        if [[ "$2" != "--do-not-open" ]]; then
            echo Opening $(trim_score_path "$illustration_ly") ...
            open "$illustration_ly"
        fi
    fi
    
}

make_segment_ly "$1"
