#! /usr/bin/env python
import os
import pathlib
import sys

import abjad


def update_file(name):
    """
    Updates file with ``name``
    """
    output = pathlib.Path("/Users/trevorbaca/.tmp/doctest.out")
    os.system(f"doctest {name} > {str(output)}")
    file_location_line = None
    got = False
    line_number_to_correct_lines = {}
    for line in output.open("r"):
        if line.startswith("****"):
            got = False
            correct_lines = None
            continue
        elif line.startswith("Got:"):
            got = True
            continue
        elif line.startswith("File"):
            file_location_line = line
            parts = line.split()
            last_quote = line.rfind('"')
            start = last_quote + len(", line ")
            line = line[start:]
            line_number = line.split(",")[0]
            line_number = int(line_number)
            correct_lines = []
            line_number_to_correct_lines[line_number] = correct_lines
            continue
        elif got:
            correct_lines.append(line)
    if not file_location_line:
        print(f"Updated no doctests in {name} ...")
        return
    start = file_location_line.find('"') + 1
    stop = file_location_line.rfind('"')
    path = file_location_line[start:stop]
    path = pathlib.Path(path)
    with path.open() as pointer:
        source_lines = pointer.readlines()
    for line_number in reversed(sorted(line_number_to_correct_lines)):
        correct_lines = line_number_to_correct_lines[line_number]
        correct_lines = [_[4:] for _ in correct_lines]
        line_index = line_number - 1
        offending_line = source_lines[line_index]
        assert ">>>" in offending_line
        index = offending_line.find(">")
        whitespace_indent = index * " "
        correct_lines = [whitespace_indent + _ for _ in correct_lines]
        count = 0
        for line in source_lines[line_index:]:
            if line.strip() == "":
                break
            count += 1
        start = line_index + 1
        stop = start + count - 1
        source_lines[start:stop] = correct_lines
    text = "".join(source_lines)
    path.write_text(text)
    count = len(line_number_to_correct_lines)
    counter = abjad.String("doctest").pluralize(count)
    print(f"Updated {count} {counter} in {path.name} ...")


if __name__ == "__main__":
    os.system("clear")
    if 1 < len(sys.argv):
        arguments = " ".join(sys.argv[1:])
        print(f"Running update-doctests on {arguments} ...")
    else:
        print(f"Must specify one or more files ...")
        sys.exit()
    for name in sys.argv[1:]:
        update_file(name)
