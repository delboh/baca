#! /usr/bin/env python
"""
Call from a single part directory.

A short driver script will benecessary to loop this script over all part directories
in a build.

TODO: figure out the right way to integrate segment collection.
"""
import io
import os
import shutil
import subprocess
import sys

import abjad
import baca

for string in sys.argv[1:]:
    if string.startswith("--directory="):
        directory = string[12:]
        break
else:
    directory = os.getcwd()
directory = baca.Path(directory)

if not directory.parent.name.endswith("-parts"):
    print("Must call script in part build directory ...")
    sys.exit(-1)

file_name = directory.name + "-music.ly"
path = directory / file_name
part = baca.segments.path_to_part(path)
dashed_part_name = abjad.String(part.name).to_dash_case()
part_directory = directory
part_pdf_path = part_directory / dashed_part_name
part_pdf_path = part_pdf_path.with_suffix(".pdf")
print(f"Building {part_pdf_path.trim()} ...")
snake_part_name = abjad.String(part.name).to_snake_case()
file_name = f"{snake_part_name}_layout.py"
path = part_directory / file_name
os.system(f"make-layout-ly {path}")
print()
file_name = f"{dashed_part_name}-front-cover.tex"
path = part_directory / file_name
baca.build.interpret_tex_file(path)
print()
file_name = f"{dashed_part_name}-preface.tex"
path = part_directory / file_name
baca.build.interpret_tex_file(path)
print()

#music_ly = part_directory / f"{dashed_part_name}-music.ly"
#baca.build.run_lilypond(music_ly)
os.system("interpret-build-music")
print()

file_name = f"{dashed_part_name}-back-cover.tex"
path = part_directory / file_name
baca.build.interpret_tex_file(path)
print()
file_name = f"{dashed_part_name}-part.tex"
path = part_directory / file_name
baca.build.interpret_tex_file(path)
